{
  "memories": [
    {
      "id": "mem_1752225987081_vcmmcnskb",
      "content": "Key differences between web-scraper-mcp (working) and youtube-mcp:\n\n1. **SSE Implementation**: \n   - web-scraper-mcp: Uses supergateway in Dockerfile (`CMD [\"supergateway\", \"--port\", \"8081\", \"--stdio\", \"./start-server.sh\"]`)\n   - youtube-mcp: Has custom SSE implementation in sse-simple.ts that spawns stdio server for each request\n\n2. **Server Architecture**:\n   - web-scraper-mcp: Simple stdio server (index.ts) that gets wrapped by supergateway\n   - youtube-mcp: Complex SSE server that tries to spawn the stdio server on each request\n\n3. **Dockerfile**:\n   - web-scraper-mcp: Not found in directory, but HOSTING_SSE_GUIDE.md shows it uses supergateway\n   - youtube-mcp: Has Dockerfile but runs custom sse-simple.js instead of using supergateway\n\n4. **Key Issue**: youtube-mcp is spawning 'node dist/index.js' for each request but the approach seems flawed",
      "type": "troubleshooting",
      "tags": [
        "troubleshooting",
        "mcp",
        "sse",
        "debugging",
        "web-scraper-mcp",
        "youtube-mcp"
      ],
      "timestamp": "2025-07-11T09:26:27.080Z",
      "accessCount": 0,
      "lastAccessed": "2025-07-11T09:26:27.080Z",
      "lastVerified": "2025-07-11T09:26:27.080Z",
      "status": "fresh"
    },
    {
      "id": "mem_1752226248839_pm1ov0qqa",
      "content": "MCP SSE Deployment Issue - YouTube MCP Not Working\n\nPROBLEM:\nThe youtube-mcp was not working when deployed to Railway with SSE, even though the web-scraper-mcp worked fine. The issue was that youtube-mcp was using a custom SSE implementation (sse-simple.ts) that tried to spawn a new stdio process for each request, which is fundamentally incompatible with how MCP servers work.\n\nROOT CAUSE:\n- MCP stdio servers expect persistent connections, not per-request spawning\n- The custom sse-simple.ts implementation was manually parsing JSON-RPC from stdout\n- It had hardcoded fallback responses that didn't match actual server capabilities\n\nSOLUTION:\nReplace the custom SSE implementation with supergateway, which is what the working web-scraper-mcp uses.\n\nFix in Dockerfile:\n```dockerfile\n# WRONG (custom SSE):\nCMD [\"node\", \"dist/sse-simple.js\"]\n\n# CORRECT (supergateway):\nRUN npm install -g supergateway\nCMD [\"sh\", \"-c\", \"supergateway --port ${PORT:-8080} --stdio 'node dist/index.js 2>&1'\"]\n```\n\nKEY LEARNINGS:\n1. Always use supergateway for SSE bridging - it handles the protocol correctly\n2. Don't create custom SSE implementations - they're complex and error-prone\n3. The stderr redirection (2>&1) is important for seeing logs in Railway\n4. Compare with working implementations when debugging deployment issues",
      "type": "warning",
      "tags": [
        "warning",
        "deployment",
        "mcp",
        "sse",
        "railway",
        "debugging",
        "supergateway"
      ],
      "timestamp": "2025-07-11T09:30:48.839Z",
      "context": "Debugging YouTube MCP deployment issue on Railway - solution was to use supergateway instead of custom SSE implementation",
      "accessCount": 0,
      "lastAccessed": "2025-07-11T09:30:48.839Z",
      "lastVerified": "2025-07-11T09:30:48.839Z",
      "status": "fresh"
    }
  ],
  "lastUpdated": "2025-07-11T09:30:48.839Z"
}